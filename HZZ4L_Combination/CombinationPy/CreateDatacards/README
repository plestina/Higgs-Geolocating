/**************************************/
/*  ____  _____ ____ ___ ____  _____  */
/* |  _ \| ____/ ___|_ _|  _ \| ____| */
/* | |_) |  _|| |    | || |_) |  _|   */
/* |  _ <| |__| |___ | ||  __/| |___  */
/* |_| \_\_____\____|___|_|   |_____| */
/*                                    */
/**************************************/

-------------
Prerequisits:
-------------
cmsrel CMSSW_6_1_1
cd CMSSW_6_1_1/src
cmsenv
scram b -j16
./buildPackage.sh



---------------------------------------------
Default chain:
    - create datacards, 
    - combine them, 
    - put text2workspace, 
    - make Asimov dataset (and put it in WS), 
    - fit,
    - plot the deltaNLL 
---------------------------------------------
All that I use to run the "Default chain" is in the testChain.py. 
The inputs to this script are in testChain.yaml configuration file. 
Yaml is (to my knowledge) not intalled by default in the python that CMSSW uses, so you 
need to install it.

-------------------
1.) Installing YAML
-------------------
        1. read pyyaml-trunk/README
        2. run commands to install it

        
------------------------
2.) Running testChain.py
------------------------
- the class that does everything is ChainProcessor
- to run the "Default chain" for the configuration "2D.k3k1.0.0.PedjaIn.UniformBkg.IntOn.D0M.Dint13.8TeV.M4l131to141.RECO" (working example) from testChain.py:

    python testChain.py -r 2D.k3k1.0.0.PedjaIn.UniformBkg.IntOn.D0M.Dint13.8TeV.M4l131to141.RECO

    - the example with k2/k1 setup that has negative value problems is "2D.k3k1.0.0.PedjaIn.UniformBkg.IntOn.D0M.Dint13.8TeV.M4l131to141.RECO"
    
    
- other options can be seen by "python testChain.py --help".
    - to avoid making datacards add the option "-D 0"!
- in the testChain.py, to change what will be done, you can change string arguments in "chain_process.process()" calls. 
      
      
---------------
3.) Miscellanea
---------------

- for plotting LimitVsLumi plots use "plotLimitVsLumi.py" and its configuration file plotLimitVsLumi.yaml
- for plotting Templates use "plotTemplates.py" and its configuration file plotTemplates.yaml
- for plotting TotalPdf use "plotTotalPdf.py" and its configuration file plotTotalPdf.yaml (from templates directly)




        